<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>WDV221 Intro Javascript - Calculations and Textfields</title>

<style>

body {background-color:#C99;
}

fieldset {
	width:350px;
	margin:auto;	
}

#errorID{
  color: red;
}

#balance{
  color: blue;
}


</style>

<script>
    var accountBalance = 0;
    var amount = 0;



  function Deposit(){
      var text;
      amount = parseFloat(document.getElementById("inAmt").value);

      //  document.getElementById("balance").innerHTML= formatCurrency(amount);

    if (isNaN(amount)  || amount === '') {
        text = "Please Enter a Number!";
        
    } else if (amount < 0 ) {
        text = "Amount cannot be negative!";
    } else {
      accountBalance += amount;
      // alert(accountBalance);
      text = "THANK YOU FOR YOUR DEPOSIT";
      document.getElementById("balance").innerHTML = formatCurrency(accountBalance);
    }
    document.getElementById("errorID").innerHTML = text;
    
    // alert(accountBalance);
  }

  function Withdraw(){
    var ME_text;

    amount = parseFloat(document.getElementById("inAmt").value);

    // document.getElementById("balance").innerHTML= formatCurrency(amount);

    if (isNaN(amount)  || amount === '') {
      ME_text = "Please Enter a Number!";
        
    } else if (amount < 0 ) {
      ME_text = "Amount cannot be negative!";
    } else if (accountBalance < amount) {

      ME_text = "Cannot withdraw more than you have!";
    } else {

      accountBalance -= amount;
      // alert(accountBalance);
      ME_text = "THANK YOU FOR YOUR WITHDRAW!";
      document.getElementById("balance").innerHTML = formatCurrency(accountBalance);
    }
    document.getElementById("errorID").innerHTML = ME_text;

    // alert(accountBalance);
  }


    
  function DisplayBalance(){
    document.getElementById("balance").innerHTML = formatCurrency(accountBalance);
  }

  function Reset(){

    accountBalance = 0;
    document.getElementById("errorID").innerHTML = "";
    DisplayBalance();

  }

</script>

</head>

<body>
<h2>WDV221 Intro Javascript</h2>
<h3>Calculations and Textfields </h3>
<h3>Create an ATM</h3>
<p>In this project you are going to create an electronic checkbook using Javascript. You can add amounts and withdraw amounts from your current balance. </p>
<form id="form2" name="form2" method="post" action="">
  <fieldset>
      <p>
        Enter an amount: 
        <input type="text" name="inAmt" id="inAmt" />
      </p>
      <span id="errorID"></span>
      <p>
        <input type="button" name="button3" id="button3" value="Deposit" onclick="Deposit()"/>
        <input type="button" name="button4" id="button4" value="Withdraw" onclick="Withdraw()" />
        <input type="button" name="button5" id="button5" value="Display Balance" onclick="DisplayBalance()" /> 
      </p>
      <p>Your Balance: <span id="balance"></span></p>
      <p>
        <input type="reset" name="button2" id="reset" value="Reset"  onclick="Reset()"/>
      </p>
  </fieldset>
</form>
<p>Instructions:</p>
<p>1. Create a global variable called accountBalance. Initialize it to 0. </p>
<p>2. The amount field should follow the following rules:</p>
<ol>
  <li>It must be a number. If not, display an error message &quot;Please enter a number.&quot;.</li>
  <li>The amount cannot be negative. If so, display an error message &quot;Amount cannot be negative.&quot;.</li>
  <li>Display the updated balance.</li>
</ol>
<p>3. Create a deposit function that will process a deposit to the account. </p>
<ol>
  <li>This will add the amount entered in the Amount field to the accountBalance.</li>
</ol>
<p>4. Create a withdraw function that will process a withdrawl from the account.</p>
<ol>
  <li>The amount entered cannot be less than the balance amount. If so, display an error message &quot;Cannot withdraw more than you have!&quot;.</li>
  <li> This will subtract the amount entered in the Amount field from the accountBalance.</li>
  <li>Display the update balance.</li>
</ol>
<p>5. Create a displayBalance function that will display the current value of accountBalance in the Balance field. The balance amount displayed to the page should be formatted as currency. Call this function whenever a deposit or withdrawal is processed. Call this function from the Balance button.</p>
<p>6. Use the combined operators for the deposit and withdraw processes. </p>
<p>7. Use parseInt( ) or parseFloat( ) as needed.</p>
</body>
<script> 

	function formatCurrency(accountBalance)
{
  accountBalance = accountBalance.toString().replace(/\$|\,/g, '');
    if (isNaN(accountBalance))
    {
      accountBalance = "0";
    }

    sign = (accountBalance == (accountBalance = Math.abs(accountBalance)));
    accountBalance = Math.floor(accountBalance * 100 + 0.50000000001);
    cents = accountBalance % 100;
    accountBalance = Math.floor(accountBalance / 100).toString();

    if (cents < 10)
    {
        cents = "0" + cents;
    }
    for (var i = 0; i < Math.floor((accountBalance.length - (1 + i)) / 3); i++)
    {
      accountBalance = accountBalance.substring(0, accountBalance.length - (4 * i + 3)) + ',' + accountBalance.substring(accountBalance.length - (4 * i + 3));
    }

    return (((sign) ? '' : '-') + '$' + accountBalance + '.' + cents);
}//end formatCurrency()


</script>
</html>
